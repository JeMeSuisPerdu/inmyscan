{% extends 'base.html.twig' %}

{% block title %}{{ manga.titre }} | Anime VOSTFR{% endblock %}

{% block meta %}
    <meta name="description" content="Regardez {{ manga.titre }} en VOSTFR. Choisissez parmi différents lecteurs et épisodes. Profitez de l'anime dans la meilleure qualité." />
    <meta name="keywords" content="anime, {{ manga.titre }}, VOSTFR, regarder anime, épisodes d'anime" />
    <meta name="author" content="Votre Nom" />
    <meta http-equiv="Content-Language" content="fr" />
    <link rel="canonical" href="{{ path('voir_anime', { 'mangaId': manga.id, 'saison': 1 }) }}" />
{% endblock %}

{% block body %}
    {{ navbar() }}

    <div class="anime-lecture-container">
        <h1>
            <a style="color: white;" href="{{ path('manga_profile', { 'id': manga.id }) }}">{{ manga.titre }}</a>
        </h1>        
        <div class="anime-lecture-box">
            <div class="anime-lecture-content-vid">
                <div class="select-anime-lecteur" style="display:flex;">
                    <select id="episode-select" aria-label="Sélectionnez un épisode">
                        {% for episodeNumber, lecteurLinks in episodes %}
                            <option value="{{ episodeNumber }}">ÉPISODE {{ episodeNumber }}</option>
                        {% endfor %}
                    </select>
                    <select id="lecteur-select" style="display: none;" aria-label="Sélectionnez un lecteur"></select>
                </div>
            </div>
        </div>
        <div id="video-container" style="margin-top: 20px;">
            <iframe id="video-iframe" src="" frameborder="0" height="700" width="1100" allowfullscreen style="display: none;margin-bottom: 40px;"></iframe>
        </div>
        <div id="lecteur-message" style="display: none; color: red; margin-top: 10px;">
            Essayez de changer de lecteur...
        </div>
    </div>
    {{ footer() }}

    {# Données structurées pour l'anime #}
    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "VideoObject",
        "name": "{{ manga.titre }}",
        "description": "Regardez {{ manga.titre }} en VOSTFR. Choisissez parmi différents lecteurs.",
        "thumbnailUrl": "{{ asset('img/anime_pfp/' ~ manga.photo) }}",
        "uploadDate": "{{ 'now'|date('Y-m-d') }}",
        "duration": "PT1H30M",  
        "contentUrl": "{{ path('voir_anime', { 'mangaId': manga.id, 'saison': 1 }) }}"
    }
    </script>

    <script>
        var episodeLinks = {{ episodes | json_encode | raw }}; // Récupérer les liens des épisodes

        var episodeSelect = document.getElementById('episode-select');
        var lecteurSelect = document.getElementById('lecteur-select');
        var videoIframe = document.getElementById('video-iframe');
        var lecteurMessage = document.getElementById('lecteur-message'); // Référence au message d'avertissement

        // Fonction pour mettre à jour la vidéo dans l'iframe
        function updateVideo(link) {
            if (link) {
                videoIframe.src = link; // Met à jour l'attribut src de l'iframe avec le lien du lecteur
                videoIframe.style.display = 'block'; // Affiche l'iframe
            }
        }

        // Fonction pour mettre à jour les lecteurs en fonction de l'épisode sélectionné
        function updateLecteurs(episodeNumber) {
            lecteurSelect.innerHTML = ''; // Réinitialiser
            lecteurSelect.style.display = 'none'; // Masquer le select des lecteurs

            if (episodeNumber) {
                var lecteurs = episodeLinks[episodeNumber];
                if (lecteurs) { // Vérifiez si des lecteurs existent
                    for (var lecteur in lecteurs) {
                        if (lecteurs.hasOwnProperty(lecteur)) {
                            var option = document.createElement('option');
                            option.value = lecteurs[lecteur]; // Lien du lecteur
                            option.textContent = lecteur; // Nom du lecteur
                            lecteurSelect.appendChild(option);
                        }
                    }
                    // Affichez le sélecteur de lecteurs uniquement s'il y a des lecteurs
                    if (lecteurSelect.options.length > 0) {
                        lecteurSelect.style.display = 'block';
                        lecteurMessage.style.display = 'none'; // Masquer le message d'avertissement

                        // Récupérer le nom du lecteur actuel depuis le localStorage
                        var storedLecteurName = localStorage.getItem('currentLecteurName'); 

                        // Vérification si le lecteur actuel est valide
                        if (storedLecteurName) {
                            var validLecteur = Array.from(lecteurSelect.options).find(option => option.textContent === storedLecteurName);
                            if (validLecteur) {
                                lecteurSelect.value = validLecteur.value; // Conserver le lien du lecteur correspondant
                            } else {
                                lecteurSelect.value = lecteurSelect.options[0].value; // Sélectionner le premier lecteur
                            }
                        } else {
                            lecteurSelect.value = lecteurSelect.options[0].value; // Sélectionner le premier lecteur par défaut
                        }

                        updateVideo(lecteurSelect.value); // Charger la vidéo avec le lecteur actuel
                    } else {
                        lecteurMessage.style.display = 'block'; // Afficher le message d'avertissement si aucun lecteur
                    }
                }
            }
        }

        // Gestion du changement de sélection du lecteur
        lecteurSelect.addEventListener('change', function() {
            var selectedLink = this.value;
            var selectedLecteurName = this.options[this.selectedIndex].textContent; // Récupérer le nom du lecteur sélectionné
            localStorage.setItem('currentLecteurName', selectedLecteurName); // Sauvegarder le nom du lecteur dans le localStorage
            updateVideo(selectedLink); // Mettre à jour la vidéo avec le nouveau lecteur
        });

        // Initialisation : sélectionner automatiquement le premier épisode et mettre à jour les lecteurs
        document.addEventListener('DOMContentLoaded', function() {
            var firstEpisodeNumber = Object.keys(episodeLinks)[0]; // Obtenir le premier épisode
            episodeSelect.value = firstEpisodeNumber; // Sélectionner le premier épisode

            updateLecteurs(firstEpisodeNumber); // Mettre à jour les lecteurs pour le premier épisode
        });

        // Gestion du changement de sélection de l'épisode
        episodeSelect.addEventListener('change', function() {
            var episodeNumber = this.value;
            updateLecteurs(episodeNumber);
        });
    </script>

    
{% endblock %}
